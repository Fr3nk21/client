"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/state/api.ts":
/*!**************************!*\
  !*** ./src/state/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Priority: function() { return /* binding */ Priority; },\n/* harmony export */   Status: function() { return /* binding */ Status; },\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   useCreateProjectMutation: function() { return /* binding */ useCreateProjectMutation; },\n/* harmony export */   useCreateTaskMutation: function() { return /* binding */ useCreateTaskMutation; },\n/* harmony export */   useGetAuthUserQuery: function() { return /* binding */ useGetAuthUserQuery; },\n/* harmony export */   useGetProjectsQuery: function() { return /* binding */ useGetProjectsQuery; },\n/* harmony export */   useGetTasksByUserQuery: function() { return /* binding */ useGetTasksByUserQuery; },\n/* harmony export */   useGetTasksQuery: function() { return /* binding */ useGetTasksQuery; },\n/* harmony export */   useGetTeamsQuery: function() { return /* binding */ useGetTeamsQuery; },\n/* harmony export */   useGetUsersQuery: function() { return /* binding */ useGetUsersQuery; },\n/* harmony export */   useSearchQuery: function() { return /* binding */ useSearchQuery; },\n/* harmony export */   useUpdateTaskStatusMutation: function() { return /* binding */ useUpdateTaskStatusMutation; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.modern.mjs\");\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/query/rtk-query.modern.mjs\");\n\nvar Priority;\n(function(Priority) {\n    Priority[\"Urgent\"] = \"Urgent\";\n    Priority[\"High\"] = \"High\";\n    Priority[\"Medium\"] = \"Medium\";\n    Priority[\"Low\"] = \"Low\";\n    Priority[\"Backlog\"] = \"Backlog\";\n})(Priority || (Priority = {}));\nvar Status;\n(function(Status) {\n    Status[\"ToDo\"] = \"To Do\";\n    Status[\"WorkInProgress\"] = \"Work In Progress\";\n    Status[\"UnderReview\"] = \"Under Review\";\n    Status[\"Completed\"] = \"Completed\";\n})(Status || (Status = {}));\nconst api = (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.createApi)({\n    baseQuery: (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_1__.fetchBaseQuery)({\n        baseUrl: \"http://localhost:8000\",\n        prepareHeaders: async (headers)=>{\n            const session = await fetchAuthSession();\n            var _session_tokens;\n            const { accessToken } = (_session_tokens = session.tokens) !== null && _session_tokens !== void 0 ? _session_tokens : {};\n            if (accessToken) {\n                headers.set(\"Authorization\", \"Bearer \".concat(accessToken));\n            }\n            return headers;\n        }\n    }),\n    reducerPath: \"api\",\n    tagTypes: [\n        \"Projects\",\n        \"Tasks\",\n        \"Users\",\n        \"Teams\"\n    ],\n    endpoints: (build)=>({\n            getAuthUser: build.query({\n                queryFn: async (_, _queryApi, _extraoptions, fetchWithBQ)=>{\n                    try {\n                        const user = await getCurrentUser();\n                        const session = await fetchAuthSession();\n                        if (!session) throw new Error(\"No session found\");\n                        const { userSub } = session;\n                        // const { accessToken } = session.tokens ?? {};\n                        const userDetailsResponse = await fetchWithBQ(\"users/\".concat(userSub));\n                        const userDetails = userDetailsResponse.data;\n                        return {\n                            data: {\n                                user,\n                                userSub,\n                                userDetails\n                            }\n                        };\n                    } catch (error) {\n                        return {\n                            error: error.message || \"Could not fetch user data\"\n                        };\n                    }\n                }\n            }),\n            getProjects: build.query({\n                query: ()=>\"projects\",\n                providesTags: [\n                    \"Projects\"\n                ]\n            }),\n            createProject: build.mutation({\n                query: (project)=>({\n                        url: \"projects\",\n                        method: \"POST\",\n                        body: project\n                    }),\n                invalidatesTags: [\n                    \"Projects\"\n                ]\n            }),\n            getTasks: build.query({\n                query: (param)=>{\n                    let { projectId } = param;\n                    return \"tasks?projectId=\".concat(projectId);\n                },\n                providesTags: (result)=>result ? result.map((param)=>{\n                        let { id } = param;\n                        return {\n                            type: \"Tasks\",\n                            id\n                        };\n                    }) : [\n                        {\n                            type: \"Tasks\"\n                        }\n                    ]\n            }),\n            getTasksByUser: build.query({\n                query: (userId)=>\"tasks/user/\".concat(userId),\n                providesTags: (result, error, userId)=>result ? result.map((param)=>{\n                        let { id } = param;\n                        return {\n                            type: \"Tasks\",\n                            id\n                        };\n                    }) : [\n                        {\n                            type: \"Tasks\",\n                            id: userId\n                        }\n                    ]\n            }),\n            createTask: build.mutation({\n                query: (task)=>({\n                        url: \"tasks\",\n                        method: \"POST\",\n                        body: task\n                    }),\n                invalidatesTags: [\n                    \"Tasks\"\n                ]\n            }),\n            updateTaskStatus: build.mutation({\n                query: (param)=>{\n                    let { taskId, status } = param;\n                    return {\n                        url: \"tasks/\".concat(taskId, \"/status\"),\n                        method: \"PATCH\",\n                        body: {\n                            status\n                        }\n                    };\n                },\n                invalidatesTags: (result, error, param)=>{\n                    let { taskId } = param;\n                    return [\n                        {\n                            type: \"Tasks\",\n                            id: taskId\n                        }\n                    ];\n                }\n            }),\n            getUsers: build.query({\n                query: ()=>\"users\",\n                providesTags: [\n                    \"Users\"\n                ]\n            }),\n            getTeams: build.query({\n                query: ()=>\"teams\",\n                providesTags: [\n                    \"Teams\"\n                ]\n            }),\n            search: build.query({\n                query: (query)=>\"search?query=\".concat(query)\n            })\n        })\n});\nconst { useGetProjectsQuery, useCreateProjectMutation, useGetTasksQuery, useCreateTaskMutation, useUpdateTaskStatusMutation, useSearchQuery, useGetUsersQuery, useGetTeamsQuery, useGetTasksByUserQuery, useGetAuthUserQuery } = api;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/state/api.ts\n"));

/***/ })

});